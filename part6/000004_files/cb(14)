//@charset "gbk";
//通用简单页码翻页
function initModPager($div,itemsOnPage){
    var $list, $items, itemsLen;
    $('.J-mod-list').each(function(){
        if($(this).attr('tag') == $div.attr('tag')){
            $list = $(this);
            return false;
        }
    });
    $items = $list.find('.J-mod-items');
    itemsLen = $items.length;
    if(itemsLen <= itemsOnPage){return false;}
    $items.each(function(){
        if($(this).index() >= itemsOnPage){
            $(this).hide();
        }
    });
    $div.empty();
    $div.pagination({
        items: itemsLen,//总条数
        itemsOnPage: itemsOnPage,//每页显示n条
        prevText: '上一页',//上一页
        nextText: '下一页',//下一页
        onPageClick:function(pageNumber){
            var startPos = (pageNumber - 1) * itemsOnPage;
            var endPos = pageNumber * itemsOnPage;
            $items.each(function(i){
                var index = i + 1;
                $(this).hide();
                if(index > startPos && index <= endPos){
                    $(this).show();
                }
            });
        }
    });
}
// initModPager($('.J-mod-pager'),1);
//@charset "gbk";
/*
* jQuery pager plugin
* Version 1.0 (12/22/2008)
* @requires jQuery v1.2.6 or later
*
* Example at: http://jonpauldavies.github.com/JQuery/Pager/PagerDemo.html
*
* Copyright (c) 2008-2009 Jon Paul Davies
* Dual licensed under the MIT and GPL licenses:
* http://www.opensource.org/licenses/mit-license.php
* http://www.gnu.org/licenses/gpl.html
* 
* Read the related blog post and contact the author at http://www.j-dee.com/2008/12/22/jquery-pager-plugin/
*
* This version is far from perfect and doesn't manage it's own state, therefore contributions are more than welcome!
*
* Usage: .pager({ pagenumber: 1, pagecount: 15, buttonClickCallback: PagerClickTest });
*
* Where pagenumber is the visible page number
*       pagecount is the total number of pages to display
*       buttonClickCallback is the method to fire when a pager button is clicked.
*
* buttonClickCallback signiture is PagerClickTest = function(pageclickednumber) 
* Where pageclickednumber is the number of the page clicked in the control.
*
* The included Pager.CSS file is a dependancy but can obviously tweaked to your wishes
* Tested in IE6 IE7 Firefox & Safari. Any browser strangeness, please report.
*/
(function($) {
    $.fn.pager = function(options) {

        var opts = $.extend({}, $.fn.pager.defaults, options);

        return this.each(function() {

            // empty out the destination element and then render out the pager with the supplied options
            $(this).empty().append(renderpager(parseInt(options.pagenumber), parseInt(options.pagecount), options.buttonClickCallback));
            
            // specify correct cursor activity
           // $('.pages li').mouseover(function() { document.body.style.cursor = "pointer"; }).mouseout(function() { document.body.style.cursor = "auto"; });
        });
    };

    // render and return the pager with the supplied options
    function renderpager(pagenumber, pagecount, buttonClickCallback) {
        // setup $pager to hold render
        var $pager = $('<ul class="pages"></ul>');

        // add in the previous and next buttons
        $pager.append(renderButton('首页', pagenumber, pagecount, buttonClickCallback)).append(renderButton('上五页', pagenumber, pagecount, buttonClickCallback));

        // pager currently only handles 10 viewable pages ( could be easily parameterized, maybe in next version ) so handle edge cases
        if(pagenumber % 5 == 0){
            var startPoint = (parseInt(pagenumber/5) - 1)*5 + 1;
            var endPoint = pagenumber;
        }else{
            var startPoint = (parseInt(pagenumber/5))*5 + 1;
            var endPoint = (parseInt(pagenumber/5) + 1)*5;
        }

        if (startPoint < 1) {
            startPoint = 1;
        }
        if(endPoint > pagecount){
            endPoint = pagecount;
        }
        // loop thru visible pages and render buttons
        for (var page = startPoint; page <= endPoint; page++) {

            var currentButton = $('<li class="page-number">' + (page) + '</li>');

            page == pagenumber ? currentButton.addClass('pgCurrent') : currentButton.click(function() { buttonClickCallback(this.firstChild.data); });
            currentButton.appendTo($pager);
        }

        // render in the next and last buttons before returning the whole rendered control back.
        $pager.append(renderButton('下五页', pagenumber, pagecount, buttonClickCallback)).append(renderButton('尾页', pagenumber, pagecount, buttonClickCallback));
        //小于等于1页时不显示页码
        if(pagecount <= 1){
            $pager.find('.page-number').hide();
        }
        //小于等于5页时不显示
        if(pagecount > 5){
            $pager.after('<span class="pgCont">'+pagenumber+'/'+pagecount+'</span>');
        }
        return $pager;
    }

    // renders and returns a 'specialized' button, ie 'next', 'previous' etc. rather than a page number button
    function renderButton(buttonLabel, pagenumber, pagecount, buttonClickCallback) {

        if(pagenumber % 5 == 0){
            var startPoint = (parseInt(pagenumber/5) - 1)*5 + 1;
            var endPoint = pagenumber;
        }else{
            var startPoint = (parseInt(pagenumber/5))*5 + 1;
            var endPoint = (parseInt(pagenumber/5) + 1)*5;
        }
        if (startPoint < 1) {
            startPoint = 1;
        }
        if(endPoint > pagecount){
            endPoint = pagecount;
        }

        var $Button = $('<li class="pgNext">' + buttonLabel + '</li>');

        var destPage = 1;

        // work out destination page for required button type
        switch (buttonLabel) {
            case "首页":
                destPage = 1;
                break;
            case "上五页":
                destPage = pagenumber%5==0 ? (parseInt(pagenumber/5) - 2)*5 + 1 :(parseInt(pagenumber/5) - 1)*5 + 1;
                break;
            case "下五页":
                destPage = pagenumber%5==0 ? (parseInt(pagenumber/5))*5 + 1 :(parseInt(pagenumber/5) + 1)*5 + 1;
                break;
            case "尾页":
                destPage = pagecount;
                break;
        }
        // disable and 'grey' out buttons if not needed.
        if (buttonLabel == "首页" ) {
            pagenumber <= 1 ? $Button.addClass('pgEmpty') : $Button.click(function() { buttonClickCallback(destPage); });
        }
        else if(buttonLabel == "上五页"){
            startPoint <= 1 ? $Button.addClass('pgEmpty') : $Button.click(function() { buttonClickCallback(destPage); });
        }else if(buttonLabel == "下五页"){
            pagecount - endPoint <= 0 ? $Button.addClass('pgEmpty') : $Button.click(function() { buttonClickCallback(destPage); });

        }
        else {
            pagenumber >= pagecount ? $Button.addClass('pgEmpty') : $Button.click(function() { buttonClickCallback(destPage); });
        }
        //小于等于5页时
        if(pagecount <= 5){
            $Button.css('display','none');
        }
        return $Button;
    }

    // pager defaults. hardly worth bothering with in this case but used as placeholder for expansion in the next version
    $.fn.pager.defaults = {
        pagenumber: 1,
        pagecount: 1
    };

})(jQuery);





